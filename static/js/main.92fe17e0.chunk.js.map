{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/IconButton/IconButton.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","components/Image-api/images-api.js","components/404_error.jpg","components/ImageErrorView/ImageErrorView.js","components/IconButton/IconButton.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/ImagePendingView/ImagePendingView.js","components/Button/Button.js","components/ImageInfo/ImageInfo.js","App.js","index.js","components/Modal/Modal.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","inputValue","setInputValue","reset","className","s","SearchForm","event","preventDefault","trim","console","log","alert","SearchFormButton","type","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","api","fetchImage","keyWord","page","fetch","then","response","ok","json","Promise","reject","Error","ImageErrorView","message","role","src","errorImage","width","alt","IconButton","children","onClick","defaultProps","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","Overlay","currentTarget","Options","ImageGalleryItem","largeImageUrl","showModal","setShowModal","toggleModal","prevState","ImageGalleryItemImage","ImageGallery","images","map","image","webformatURL","tags","largeImageURL","id","ImagePendingView","color","height","Component","Button","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","Status","ImageInfo","searchQuerry","setImages","error","setError","setPage","status","setStatus","hits","length","catch","App","setSearchQuerry","data","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.92fe17e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__Y6Xgw\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3TBn4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IconButton\":\"IconButton_IconButton__3-og0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__kFdC1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3XMyY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__20j8k\",\"SearchForm\":\"Searchbar_SearchForm__Ql1fA\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1XcVr\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3Ay6t\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3hZ_S\"};","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Searchbar.module.css\";\n\nexport default function Searchbar({ onSubmit }) {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value.toLowerCase());\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (inputValue.trim() === \"\") {\n      alert(\"Введите ключевое слово для поиска\");\n      return;\n    }\n    onSubmit(inputValue);\n    console.log(inputValue);\n    reset();\n  };\n\n  const reset = () => {\n    setInputValue(\"\");\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\n        <button className={s.SearchFormButton} type=\"submit\">\n          <span className={s.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={inputValue}\n          onChange={handleInputChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n// import { Component } from \"react\";\n// import PropTypes from \"prop-types\";\n// import s from \"./Searchbar.module.css\";\n\n// class Searchbar extends Component {\n//   state = {\n//     inputValue: \"\",\n//   };\n\n//   handleInputChange = (event) => {\n//     // console.log(event);\n//     // console.log(event.target.value);\n//     this.setState({ inputValue: event.target.value.toLowerCase() });\n//     // console.log(this.state.inputValue);\n//   };\n\n//   handleSubmit = (event) => {\n//     event.preventDefault();\n//     if (this.state.inputValue.trim() === \"\") {\n//       alert(\"Введите ключевое слово для поиска\");\n//       return;\n//     }\n//     this.props.onSubmit(this.state.inputValue);\n//     // console.log(this.state.inputValue);\n//     this.reset();\n//   };\n\n//   reset = () => {\n//     this.setState({ inputValue: \"\" });\n//   };\n\n//   render() {\n//     return (\n//       <header className={s.Searchbar}>\n//         <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n//           <button className={s.SearchFormButton} type=\"submit\">\n//             <span className={s.SearchFormButtonLabel}>Search</span>\n//           </button>\n\n//           <input\n//             className={s.SearchFormInput}\n//             type=\"text\"\n//             autoComplete=\"off\"\n//             autoFocus\n//             placeholder=\"Search images and photos\"\n//             value={this.state.inputValue}\n//             onChange={this.handleInputChange}\n//           />\n//         </form>\n//       </header>\n//     );\n//   }\n// }\n\n// Searchbar.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n\n// export default Searchbar;\n","function fetchImage(keyWord, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${keyWord}&page=${page}&key=19008570-42b7cc415e1b0453677c4c4a2&image_type=photo&orientation=horizontal&per_page=12`\n  ).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(new Error(\"No response from server\"));\n  });\n}\n\nconst api = { fetchImage };\n\nexport default api;\n","export default __webpack_public_path__ + \"static/media/404_error.de5bd9ab.jpg\";","import errorImage from \"../404_error.jpg\";\nimport PropTypes from \"prop-types\";\n\nexport default function ImageErrorView({ message }) {\n  // console.log(message);\n  return (\n    <div role=\"alert\">\n      <img src={errorImage} width=\"400\" alt=\"girl-and-boy-not-found\" />\n      <p>{message}</p>\n    </div>\n  );\n}\n\nImageErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","// import React from './react';\nimport PropTypes from \"prop-types\";\nimport s from \"./IconButton.module.css\";\n\nconst IconButton = ({ children, onClick, ...allyProps }) => {\n  return (\n    <button type=\"button\" onClick={onClick} className={s.IconButton}>\n      X\n    </button>\n  );\n};\n\nIconButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n};\n\nIconButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  // 'aria-label': PropTypes.string.isRequired,\n};\n\nexport default IconButton;\n","import { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport IconButton from \"../IconButton/IconButton\";\n// import { ReactComponent as AddIcon } from '../icons/icon-cross-1.png';\nimport s from \"./Modal.module.css\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nexport default function Modal({ src, alt, onClose }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      console.log(\"Нужно закрыть модалку\");\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = (e) => {\n    console.log(\"клик в бэкдроп\");\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.Overlay} onClick={handleBackdropClick}>\n      <div className={s.Modal}>\n        <img src={src} alt={alt} />\n      </div>\n      <div className={s.Options}>\n        <IconButton onClick={onClose}>{/* <AddIcon /> */}</IconButton>\n      </div>\n    </div>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\n// import { Component } from 'react';\n// import { createPortal } from 'react-dom';\n// import PropTypes from 'prop-types';\n// import IconButton from '../IconButton/IconButton';\n// // import { ReactComponent as AddIcon } from '../icons/icon-cross-1.png';\n// import s from './Modal.module.css';\n\n// const modalRoot = document.querySelector('#modal-root');\n\n// class Modal extends Component {\n//   componentDidMount() {\n//     window.addEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   componentWillUnmount() {\n//     window.removeEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   handleKeyDown = e => {\n//     // console.log(e.code);\n//     if (e.code === 'Escape') {\n//       console.log('Нужно закрыть модалку');\n//       this.props.onClose();\n//     }\n//   };\n\n//   handleBackdropClick = e => {\n//     console.log('клик в бэкдроп');\n//     if (e.target === e.currentTarget) {\n//       this.props.onClose();\n//     }\n//   };\n//   render() {\n//     const { src, alt, onClose } = this.props;\n//     return createPortal(\n//       <div className={s.Overlay} onClick={this.handleBackdropClick}>\n//         <div className={s.Modal}>\n//           <img src={src} alt={alt} />\n//         </div>\n//         <div className={s.Options}>\n//           <IconButton onClick={onClose}>{/* <AddIcon /> */}</IconButton>\n//         </div>\n//       </div>,\n//       modalRoot,\n//     );\n//   }\n// }\n\n// Modal.propTypes = {\n//   src: PropTypes.string.isRequired,\n//   alt: PropTypes.string.isRequired,\n//   onClose: PropTypes.func.isRequired,\n// };\n\n// export default Modal;\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Modal from \"../Modal/Modal\";\nimport s from \"./ImageGalleryItem.module.css\";\n\nexport default function ImageGalleryItem({ src, alt, largeImageUrl }) {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal((prevState) => !prevState);\n  };\n\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        onClick={toggleModal}\n        src={src}\n        alt={alt}\n        className={s.ImageGalleryItemImage}\n      />\n      {showModal && (\n        <Modal onClose={toggleModal} src={largeImageUrl} alt={alt} />\n      )}\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  largeImageUrl: PropTypes.string.isRequired,\n};\n\n// import { Component } from 'react';\n// import PropTypes from 'prop-types';\n\n// import Modal from '../Modal/Modal';\n// import s from './ImageGalleryItem.module.css';\n\n// class ImageGalleryItem extends Component {\n//   state = { showModal: false };\n//   toggleModal = () => {\n//     this.setState(state => ({\n//       showModal: !state.showModal,\n//     }));\n//   };\n\n//   render() {\n//     const { src, alt, largeImageUrl } = this.props;\n//     const { showModal } = this.state;\n//     return (\n//       <li className={s.ImageGalleryItem}>\n//         <img\n//           onClick={this.toggleModal}\n//           src={src}\n//           alt={alt}\n//           className={s.ImageGalleryItemImage}\n//         />\n//         {showModal && (\n//           <Modal onClose={this.toggleModal} src={largeImageUrl} alt={alt} />\n//         )}\n//       </li>\n//     );\n//   }\n// }\n\n// ImageGalleryItem.propTypes = {\n//   src: PropTypes.string.isRequired,\n//   alt: PropTypes.string.isRequired,\n//   largeImageUrl: PropTypes.string.isRequired,\n// };\n\n// export default ImageGalleryItem;\n","// import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport s from \"./ImageGallery.module.css\";\n\nexport default function ImageGallery({ images }) {\n  console.log(images);\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map((image) => (\n        <ImageGalleryItem\n          src={image.webformatURL}\n          alt={image.tags}\n          largeImageUrl={image.largeImageURL}\n          key={image.id}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n\n// import { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n// import s from './ImageGallery.module.css';\n\n// class ImageGallery extends Component {\n//   render() {\n//     const images = this.props.images;\n//     console.log(images);\n//     console.log(this.props);\n//     return (\n//       <ul className={s.ImageGallery}>\n//         {images.map(image => (\n//           <ImageGalleryItem\n//             src={image.webformatURL}\n//             alt={image.tags}\n//             largeImageUrl={image.largeImageURL}\n//             key={image.id}\n//           />\n//         ))}\n//       </ul>\n//     );\n//   }\n// }\n\n// ImageGallery.propTypes = {\n//   images: PropTypes.array.isRequired,\n// };\n\n// export default ImageGallery;\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nclass ImagePendingView extends Component {\n  render() {\n    return (\n      <Loader\n        className=\"Loader\"\n        type=\"Oval\"\n        color=\"#303f9f\"\n        height={80}\n        width={80}\n      />\n    );\n  }\n}\n\nexport default ImagePendingView;\n","// import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Button.module.css\";\n\nexport default function Button({ onClick }) {\n  const scroll = () => {\n    onClick();\n    setTimeout(() => {\n      window.scrollBy({\n        top: document.documentElement.clientHeight - 130,\n        behavior: \"smooth\",\n      });\n    }, 500);\n  };\n\n  return (\n    <button type=\"button\" onClick={scroll} className={s.Button}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\n// import { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import s from './Button.module.css';\n\n// class Button extends Component {\n//   scroll = () => {\n//     this.props.onClick();\n//     setTimeout(() => {\n//       window.scrollBy({\n//         top: document.documentElement.clientHeight - 130,\n//         behavior: 'smooth',\n//       });\n//     }, 500);\n//   };\n\n//   render() {\n//     return (\n//       <button type=\"button\" onClick={this.scroll} className={s.Button}>\n//         Load more\n//       </button>\n//     );\n//   }\n// }\n\n// Button.propTypes = {\n//   onClick: PropTypes.func.isRequired,\n// };\n\n// export default Button;\n","import { useState, useEffect } from \"react\";\nimport api from \"../Image-api/images-api\";\nimport PropTypes from \"prop-types\";\nimport ImageErrorView from \"../ImageErrorView/ImageErrorView\";\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\nimport ImagePendingView from \"../ImagePendingView/ImagePendingView\";\nimport Button from \"../Button/Button\";\n\nconst Status = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  REJECTED: \"rejected\",\n  RESOLVED: \"resolved\",\n};\n\nexport default function ImageInfo({ searchQuerry }) {\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  console.log(searchQuerry);\n\n  useEffect(() => {\n    setImages([]);\n  }, [searchQuerry]);\n\n  useEffect(() => {\n    if (!searchQuerry) {\n      return;\n    }\n    setStatus(Status.PENDING);\n\n    api\n      .fetchImage(searchQuerry, page)\n      .then(({ hits }) => {\n        if (hits.length !== 0) {\n          setImages((prevState) => [...prevState, ...hits]);\n          setStatus(Status.RESOLVED);\n        } else {\n          return Promise.reject(\n            new Error(\"Sorry, the requested information was not found\")\n          );\n        }\n      })\n      .catch((error) => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [page, searchQuerry]);\n\n  const onLoadMore = () => {\n    setPage((prevState) => prevState + 1);\n  };\n\n  if (status === Status.IDLE) {\n    return <h1>Please enter your request</h1>;\n  }\n\n  if (status === Status.PENDING) {\n    return <ImagePendingView />;\n  }\n\n  if (status === Status.REJECTED) {\n    return <ImageErrorView message={error.message} />;\n  }\n\n  if (status === Status.RESOLVED) {\n    return (\n      <>\n        <ImageGallery images={images} />\n        {images && <Button onClick={onLoadMore} page={page} />}\n      </>\n    );\n  }\n}\n\nImageInfo.propTypes = {\n  searchQuerry: PropTypes.string.isRequired,\n};\n\n// useEffect(() => {\n//   if (!searchQuerry) {\n//     return;\n//   }\n//   setStatus(Status.PENDING);\n\n//   api\n//     .fetchImage(searchQuerry, page)\n//     .then(({ hits }) => {\n//       // console.log(hits);\n//       setImages((prevState) => [...prevState, ...hits]);\n//       setStatus(Status.RESOLVED);\n//     })\n//     .catch((error) => {\n//       setError(error);\n//       setStatus(Status.REJECTED);\n//     });\n// }, [page, searchQuerry]);\n\n// import { Component } from 'react';\n// import api from '../Image-api/images-api';\n// import PropTypes from 'prop-types';\n// import ImageErrorView from '../ImageErrorView/ImageErrorView';\n// import ImageGallery from '../ImageGallery/ImageGallery';\n// import ImagePendingView from '../ImagePendingView/ImagePendingView';\n// import Button from '../Button/Button';\n\n// class ImageInfo extends Component {\n//   state = {\n//     error: null,\n//     status: 'idle',\n//     page: 1,\n//     images: null,\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const keyWord = this.props.searchQuerry;\n//     const prevKeyWord = prevProps.searchQuerry;\n//     const nextPage = this.state.page;\n//     const prevPage = prevState.page;\n//     // console.log(typeof keyWord);\n//     // console.log(this.props);\n//     // console.log(keyWord);\n//     if (prevKeyWord !== keyWord || prevPage !== nextPage) {\n//       this.setState({ status: 'pending', searchResult: null });\n//       console.log(prevProps.searchQuerry);\n//       console.log(this.props.searchQuerry);\n//       api\n//         .fetchImage(keyWord, nextPage)\n//         .then(({ hits }) => {\n//           if (prevPage !== nextPage) {\n//             console.log(prevState.images);\n//             this.setState({\n//               images: [...prevState.images, ...hits],\n//               status: 'resolved',\n//             });\n//           } else {\n//             this.setState({\n//               images: hits,\n//               status: 'resolved',\n//             });\n//           }\n//         })\n//         .catch(error => this.setState({ error, status: 'rejected' }));\n//     }\n//     console.log(this.state);\n//   }\n\n//   onLoadMore = () => {\n//     this.setState(prevState => ({\n//       page: prevState.page + 1,\n//     }));\n//   };\n\n//   render() {\n//     const { error, status, images, page } = this.state;\n\n//     if (status === 'idle') {\n//       return <h1>Please enter your request</h1>;\n//     }\n\n//     if (status === 'pending') {\n//       return <ImagePendingView />;\n//     }\n\n//     if (status === 'rejected') {\n//       return <ImageErrorView message={error.message} />;\n//     }\n\n//     if (status === 'resolved') {\n//       return (\n//         <>\n//           <ImageGallery images={images} />\n//           {images && <Button onClick={this.onLoadMore} page={page} />}\n//         </>\n//       );\n//     }\n//   }\n// }\n\n// ImageInfo.propTypes = {\n//   searchQuerry: PropTypes.string.isRequired,\n// };\n\n// export default ImageInfo;\n","import { useState } from \"react\";\n\nimport Searchbar from \"./components/Searchbar/Searchbar.js\";\nimport ImageInfo from \"./components/ImageInfo/ImageInfo.js\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [searchQuerry, setSearchQuerry] = useState(\"\");\n\n  const onSubmit = (data) => {\n    setSearchQuerry(data);\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={onSubmit} />\n      <ImageInfo searchQuerry={searchQuerry} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2hhcp\",\"Modal\":\"Modal_Modal__3M2tv\",\"Options\":\"Modal_Options__2NXOm\"};"],"sourceRoot":""}